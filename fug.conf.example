
DOCKER_SERVICES="contact account catalog finalise login provision order payment checkout recover haproxy"

# extra run arguments
declare -A DOCKER_EXTRA
DOCKER_EXTRA["ALL"]="${ADD_HOST_HACK}"

# inter-container links
declare -A DOCKER_LINKS
DOCKER_LINKS["haproxy"]="login account recover catalog order payment checkout finalise provision contact"
DOCKER_LINKS["account"]="contact"
DOCKER_LINKS["login"]="contact"
DOCKER_LINKS["order"]="catalog provision"
DOCKER_LINKS["payment"]="catalog"
DOCKER_LINKS["checkout"]="catalog order payment finalise"
DOCKER_LINKS["provision"]="contact"

# privileged containers
declare -A DOCKER_ROOT
DOCKER_ROOT["haproxy"]=1

# port publishings
declare -A DOCKER_PORTS
DOCKER_PORTS["haproxy"]="$HAPROXY_PORT:$HAPROXY_PORT"

# volumes
declare -A DOCKER_VOLUMES
DOCKER_VOLUMES["haproxy"]="$(pwd)/haproxy/:/haproxy-override"

# the environment variables that should be passed to containers
declare -A DOCKER_ENV
DOCKER_ENV["haproxy"]="   PORT HAPROXY_PORT"
DOCKER_ENV["account"]="   PORT CARTDEBUG SPIN_HOST SPIN_PATH SPIN_USERNAME SPIN_PASSWORD CONTACT_HOST"
DOCKER_ENV["login"]="     PORT CARTDEBUG SPIN_HOST SPIN_PATH SPIN_USERNAME SPIN_PASSWORD CONTACT_HOST"
DOCKER_ENV["recover"]="   PORT CARTDEBUG SPIN_HOST SPIN_PATH SPIN_USERNAME SPIN_PASSWORD"
DOCKER_ENV["contact"]="   PORT CARTDEBUG SPIN_HOST SPIN_PATH SPIN_USERNAME SPIN_PASSWORD"
DOCKER_ENV["catalog"]="   PORT CARTDEBUG OM_HOST OM_PATH_CAT OM_USERNAME OM_PASSWORD"
DOCKER_ENV["order"]="     PORT CARTDEBUG OM_HOST OM_PATH OM_USERNAME OM_PASSWORD CATALOG_HOST CONTACT_HOST PROVISION_HOST"
DOCKER_ENV["payment"]="   PORT CARTDEBUG OM_HOST OM_PATH OM_USERNAME OM_PASSWORD CATALOG_HOST ECCS_HOST ECCS_PATH ECCS_USERNAME ECCS_PASSWORD"
DOCKER_ENV["finalise"]="  PORT CARTDEBUG OM_HOST OM_PATH OM_USERNAME OM_PASSWORD"
DOCKER_ENV["checkout"]="  PORT CARTDEBUG CATALOG_HOST ORDER_HOST PAYMENT_HOST FINALISE_HOST"
DOCKER_ENV["provision"]=" PORT CARTDEBUG CONTACT_HOST"


